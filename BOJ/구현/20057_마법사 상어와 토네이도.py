# 마법사 상어와 토네이도
# n*n 모래밭 / A[r][c] : (r,c)에 있는 모래의 양
# 격자 가운데 칸부터 토네이토 이동이 시작됨
    # 한번에 한칸 이동
    # 토네이도가 x -> y 이동하면 y의 모든 모래가 비율과 a칸으로 이동
        # 비율 칸 : y에 있는 모래의 해당 비율(소수점 아래 버림)
        # a 칸 : 비율칸에 이동하고 남은 모래의 양
    # 모래가 이미 있는 칸으로 이동하면 모래의 합
# 토네이도는 (1,1)까지 이동한 뒤 소멸
# 격자 밖으로 이동할 수 있음
# 토네이도가 소멸되었을 때, 격자 밖으로 나간 모래의 양
# 주변의 모래 - 토네이도가 이동한 위치 기준
    # 토네이도 이동방향+1 : a
    # 토네이도 이동방향+2 : 5%
    # 토네이도 이동방향의 좌우 +1 : 7%
    # 토네이도 이동방향의 좌우 +2 : 2%
    # 토네이도 이동방향의 대각선 +1 : 10%
    # 토네이도 이동반대방향의 대각선 + 1 :1%
 
# 입력 : 격자 크기 n 홀수 (3~499)
# n  격자의 각 칸에 있는 모래 (1~1000) - 가운데 모래양 0
# 출력 : 격자 밖으로 나간 모래의 양

import sys
import math

n = int(sys.stdin.readline())
sand = []
for _ in range(n):
    sand.append(list(map(int,sys.stdin.readline().split())))
x,y = n//2, n//2
outSand = 0

# 방향 (좌-좌하-하-하우-우-우상-상-상좌)
dx = [0,1,1,1,0,-1,-1,-1]
dy = [-1,-1,0,1,1,1,0,-1]

# 모래 이동 함수
percent =[0, 0.1, 0.07, 0.01, 0, 0.01, 0.07, 0.1, 0.05, 0, 0.02, 0, 0, 0, 0.02]
def moveSand(sand,x,y,dir):
    global outSand
    total = 0
    # 이동 위치의 주위 이동 (0~7 : 주위 1칸 / 8~14 : 주위 2칸)
    for i in (1,2,3,5,6,7,8,10,14,0):
        # 모래의 양 계산
        if i == 0:          # a 위치
            amount = sand[x][y] - total
        else:               # 나머지 위치
            amount = math.floor(sand[x][y]*percent[i])
        total += amount
        moveDir = (dir+i) % 8
        # 주위 이동
        if i<8:         # 주위 1칸 
            nx = x + dx[moveDir]
            ny = y + dy[moveDir]
        elif i>=8:      # 주위 2칸
            nx = x + dx[moveDir]*2
            ny = y + dy[moveDir]*2
        if nx<0 or nx>=n or ny<0 or ny>=n:
            outSand += amount
            continue
        sand[nx][ny] += amount
    sand[x][y] = 0

moveNum = 1        # 현재 방향으로 몇칸 이동해야하는지
movedCount = 0   # 현재 방향으로 몇칸 이동했는지
curDir = 0      # 현재 이동방향
while x!=0 or y!=0:
    # 토네이도 이동
    nx = x + dx[curDir]
    ny = y + dy[curDir]
    movedCount += 1
    # 모래 이동
    moveSand(sand,nx,ny,curDir)
    # 토네이도 다음 방향
    if movedCount == moveNum:
        movedCount = 0
        curDir = (curDir+2) % 8
        # 이동 칸수가 1 늘어남
        if curDir == 0 or curDir == 4:
            moveNum += 1
    x,y = nx, ny

print(outSand)

# 5
# 0 0 0 0 0
# 0 0 0 0 0
# 0 10 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0                   # 10

# 5
# 0 0 0 0 0
# 0 0 0 0 0
# 0 100 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0                   # 85

# 7
# 1 2 3 4 5 6 7
# 1 2 3 4 5 6 7
# 1 2 3 4 5 6 7
# 1 2 3 0 5 6 7
# 1 2 3 4 5 6 7
# 1 2 3 4 5 6 7
# 1 2 3 4 5 6 7               # 139

# 5
# 100 200 300 400 200
# 300 243 432 334 555
# 999 111 0 999 333
# 888 777 222 333 900
# 100 200 300 400 500         # 7501

# 5
# 0 0 100 0 0
# 0 0 100 0 0
# 0 0 0 0 0
# 0 0 100 0 0
# 0 0 100 0 0                 # 283

# 9
# 193 483 223 482 858 274 847 283 748
# 484 273 585 868 271 444 584 293 858
# 828 384 382 818 347 858 293 999 727
# 818 384 727 373 636 141 234 589 991
# 913 564 555 827 0 999 123 123 123
# 321 321 321 983 982 981 983 980 990
# 908 105 270 173 147 148 850 992 113
# 943 923 982 981 223 131 222 913 562
# 752 572 719 590 551 179 141 137 731     # 22961