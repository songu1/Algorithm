# 주사위 굴리기
# n*m 지도 / 상:북, 하:남, 좌:서, 우:동 / 지도 각 칸 정수
# 지도 위에 주사위 : 윗면이 1, 동쪽이 3, 좌표(x,y), 모든 면에 0이 적혀있음
    #   2
    # 4 1 3
    #   5
    #   6
# 주사위를 굴렸을 때
    # 이동한칸의 수 0 -> 주사위 바닥면에 쓰인 수가 칸에 복사
    # 0이 아닌 경우 -> 칸의 수가 주사위 바닥면으로 복사, 칸의수는 0
# 주사위 놓은 곳의 좌표, 이동 명령 -> 주사위가 이동할 때마다 상단에 쓰여있는 값
# 지도 밖으로 이동한다면 해당 명령 무시, 출력X

# 입력 : 지도의 세로크기 n, 가로크기 m (1~20), 주사위 좌표 x,y , 명령의 개수 k(1~1000)
# n개의 줄에 지도에 쓰인 수
# 이동하는 명령이 순서대로 (동:1, 서:2, 북:3, 남:4)
# 출력 : 이동할 때마다 주사위 윗면에 쓰여있는 수 출력

import sys

n,m,x,y,k = map(int,sys.stdin.readline().split())
graph = []
for _ in range(n):
    graph.append(list(map(int,sys.stdin.readline().split())))
move = list(map(int,sys.stdin.readline().split()))

dx = [9,0,0,-1,1]   # 동서북남
dy = [9,1,-1,0,0]

d = [1,6,5,2,3,4]  # 주사위 번호: 위-아래-동-서-북-남 순서
dice = [-1,0,0,0,0,0,0]    # 주사위에 적힌 숫자 : 빈값,1,2,3,4,5,6 순서
for i in move:
    # 주사위 위치 이동
    nx = x + dx[i]
    ny = y + dy[i]
    if nx<0 or nx>=n or ny<0 or ny>=m:
        continue
    x,y = nx,ny
    # 주사위 굴리기 -> 번호, 숫자
    if i==1:
        d[0], d[1], d[2], d[3] = d[3], d[2], d[0], d[1]
    elif i==2:
        d[0], d[1], d[2], d[3] = d[2], d[3], d[1], d[0]
    elif i==3:
        d[0], d[1], d[4], d[5] = d[5], d[4], d[0], d[1]
    else:
        d[0], d[1], d[4], d[5] = d[4], d[5], d[1], d[0]
    # print(d)
    # print(nx,ny)
    # 이동한 칸
    if graph[nx][ny] == 0:
        graph[nx][ny] = dice[d[1]]
    else:
        dice[d[1]] = graph[nx][ny]
        graph[nx][ny] = 0
    print(dice[d[0]])



# 4 2 0 0 8
# 0 2
# 3 4
# 5 6
# 7 8
# 4 4 4 1 3 3 3 2
# #
# 0
# 0
# 3
# 0
# 0
# 8
# 6
# 3

# 3 3 1 1 9
# 1 2 3
# 4 0 5
# 6 7 8
# 1 3 2 2 4 4 1 1 3
# #
# 0
# 0
# 0
# 3
# 0
# 1
# 0
# 6
# 0

# 2 2 0 0 16
# 0 2
# 3 4
# 4 4 4 4 1 1 1 1 3 3 3 3 2 2 2 2
# #
# 0
# 0
# 0
# 0

# 3 3 0 0 16
# 0 1 2
# 3 4 5
# 6 7 8
# 4 4 1 1 3 3 2 2 4 4 1 1 3 3 2 2
# #
# 0
# 0
# 0
# 6
# 0
# 8
# 0
# 2
# 0
# 8
# 0
# 2
# 0
# 8
# 0
# 2