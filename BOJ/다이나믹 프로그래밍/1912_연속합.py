# 연속합
# n개의 정수로 이루어진 임의의 수열
# 연속된 몇개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합
# 수는 1개 이상 선택해야함

# 입력 : 정수 n(1~100000)
# n개의 정수로 이루어진 수열 (-1000 ~ 1000)
# 출력 : 연속된 몇개의 수의 최대합

# 1차 풀이 : 시간초과 -> sum함수는 O(n)의 시간복잡도 -> 많이쓰면 시간초과
# 2차 풀이 : 시간초과 -> 현재인덱스까지의 합을 반복문을 이용하여 구함 -> 시간복잡도 높음
# 3차 풀이 : 통과 -> 이전최대값+현재값 과 현재값 중 큰 값을 sum_list에 넣음

import sys
n=int(sys.stdin.readline())
arr=list(map(int,sys.stdin.readline().split()))
sum_list=arr[:]

for i in range(1,n):
    # 현재값과 이전최대값+현재값 중 최대값을 선택
    sum_list[i]=max(sum_list[i], sum_list[i-1]+arr[i])

print(max(sum_list))

# 10
# 10 -4 3 1 5 6 -35 12 21 -1      # 33

# 10
# 2 1 -4 3 4 -4 6 5 -5 1          # 14

# 5
# -1 -2 -3 -4 -5                  # -1