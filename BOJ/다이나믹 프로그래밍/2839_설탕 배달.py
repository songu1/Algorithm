# 설탕 배달 - 효율적인 화폐구성과 유사한 문제
# 정확하게 nkg을 배달해야함
# 3kg/5kg 봉지 -> 최대한 적은 봉지를 들고가려고 함
# 설탕을 정확하게 nkg을 배달해야할 때 봉지 몇개를 들고가면 되는지
# 입력 : n (3~5000)
# 출력 : 상근이가 배달하는 봉지의 최소개수 (정확하게 nkg 만들 수 없다면 -1 출력)

# 점화식 : d[i]=min(d[i],d[i-3]+1,d[i-5]+1)

import sys
n=int(sys.stdin.readline())
d=[5001]*(n+1)     # (index)kg의 설탕을 배달하기 위한 봉지의 수를 저장할 리스트
d[0]=0

for i in range(1,n+1):
    if i>=5:
        d[i] = min(d[i], d[i-3]+1, d[i-5]+1)
    elif i>=3:
        d[i] = min(d[i], d[i-3]+1)

if d[n]==5001:
    print(-1)
else:
    print(d[n])

# 18  # 4
# 4   # -1
# 6   # 2
# 9   # 3
# 11  # 3
