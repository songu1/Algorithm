# 균형 잡힌 괄호 문자열 : (와 )의 개수가 같음
# 올바른 괄호 문자열 : ( ) 괄호의 짝도 모두 맞을 경우

# 문자열 w가 균형잡힌 괄호 문자열
# 1. 빈문자열 -> 빈문자열 반환
# 2. w를 균형잡힌 괄호 문자열 u,v로 분리
    # u : 균형잡힌 문자열 / v: 빈문자열도 가능
# 3. 수행한 결과 문자열을 u에 이어 붙인 후 반환
    # 3-1. u가 올바른 문자열이면 v -> 1단계
    # 4. u가 올바른 문자열이 아님
        # 4-1. 빈 문자열에 첫번째 문자로 ( 붙임
        # 4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어붙임
        # 4-3. )를 다시 붙임
        # 4-4. u의 첫번째와 마지막 문자를 제거하고 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙임
        # 4-5. 생성된 문자열을 반환

# 균형잡힌 괄호 문자열 p가 매개변수 -> 올바른 괄호 문자열로 변환

import sys

w=sys.stdin.readline()
w=w[1:-2]


# w를 균형 잡힌 괄호 문자열 2개로 분리하는 함수
def change(w):
    # 빈 문자열일 때 반환
    if w == '':
        return w
    u=[]
    v=[]
    res=""
    valid=True
    # 균형 잡힌 괄호 문자열 u,v로 분리
    for i in range(len(w)):
        u.append(w[i])
        if u.count('(')==u.count(')'):      # 조건 만족하는 지점까지 u
            v=w[i+1:]
            u=w[:i+1]
            break
        # u가 올바른 문자열인지 체크
        elif u.count('(')>u.count(')'):
            valid=True
        else:
            valid=False
    # u가 올바른 문자열 일 때
    if valid:
        res=u+change(v)
    # u가 올바른 문자열이 아닐 때
    else:
        # 4-1 ~ 4-3
        res="("+change(v)+")"
        # 4-4
        u=list(u[1:-1])
        for i in range(len(u)):
            if u[i]=='(': u[i]=')'
            elif u[i]==')': u[i]='('
        u="".join(u)
        res=res+u
    
    return res

print('\"'+change(w)+'\"')






# "(()())()"        # "(()())()"
# ")("              # "()"
# "()))((()"        # "()(())()"
# "))()((()"        # "(())()()"